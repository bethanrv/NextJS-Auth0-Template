{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/actions/createAccessToken.ts"],"sourcesContent":["\"use server\";\n\nimport axios from \"axios\";\n\ninterface AccessTokenResponse {\n  access_token: string;\n  expires_in: number;\n  token_type: string;\n}\n\n// Create an access token for the Auth0 management API, this is used to fetch user roles\nexport async function createAccessToken(): Promise<string> {\n  try {\n    const response = await axios.post<AccessTokenResponse>(\n      `${process.env.AUTH0_ISSUER_BASE_URL}/oauth/token`,\n      new URLSearchParams({\n        grant_type: \"client_credentials\",\n        client_id: process.env.AUTH0_CLIENT_ID!,\n        client_secret: process.env.AUTH0_CLIENT_SECRET!,\n        audience: `${process.env.AUTH0_ISSUER_BASE_URL}/api/v2/`,\n      }),\n      {\n        headers: {\n          \"content-type\": \"application/x-www-form-urlencoded\",\n        },\n      }\n    );\n\n    return response.data.access_token;\n  } catch (error) {\n    throw new Error(\"Failed to get Auth0 management token\");\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;;;;AASO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,GAAG,QAAQ,GAAG,CAAC,qBAAqB,CAAC,YAAY,CAAC,EAClD,IAAI,gBAAgB;YAClB,YAAY;YACZ,WAAW,QAAQ,GAAG,CAAC,eAAe;YACtC,eAAe,QAAQ,GAAG,CAAC,mBAAmB;YAC9C,UAAU,GAAG,QAAQ,GAAG,CAAC,qBAAqB,CAAC,QAAQ,CAAC;QAC1D,IACA;YACE,SAAS;gBACP,gBAAgB;YAClB;QACF;QAGF,OAAO,SAAS,IAAI,CAAC,YAAY;IACnC,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM;IAClB;AACF;;;IArBsB;;AAAA,+OAAA"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/actions/getUsersRoles.ts"],"sourcesContent":["\"use server\";\n\nimport { createAccessToken } from \"./createAccessToken\";\nimport { getSession } from \"@auth0/nextjs-auth0\";\n\ntype Role = {\n  id: string;\n  name: string;\n  description: string;\n};\n\n// Get the roles for the current user in Auth0 Management API\nexport async function getUsersRoles(): Promise<Role[]> {\n  const session = await getSession();\n  const user = session?.user;\n\n  if (!user) {\n    throw new Error(\"User not authenticated\");\n  }\n\n  const token = await createAccessToken();\n\n  const response = await fetch(\n    `${process.env.AUTH0_ISSUER_BASE_URL}/api/v2/users/${user.sub}/roles`,\n    {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch user roles\");\n  }\n\n  const data: Role[] = await response.json();\n  return data;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AASO,eAAe;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAC/B,MAAM,OAAO,SAAS;IAEtB,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,QAAQ,MAAM,CAAA,GAAA,4HAAA,CAAA,oBAAiB,AAAD;IAEpC,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,qBAAqB,CAAC,cAAc,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,EACrE;QACE,QAAQ;QACR,SAAS;YACP,QAAQ;YACR,eAAe,CAAC,OAAO,EAAE,OAAO;QAClC;IACF;IAGF,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,OAAe,MAAM,SAAS,IAAI;IACxC,OAAO;AACT;;;IA3BsB;;AAAA,+OAAA"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/actions/isUserAdmin.tsx"],"sourcesContent":["\"use server\";\n\nimport { getUsersRoles } from \"./getUsersRoles\";\n\n// Check if the current user is an admin\nexport async function isUserAdmin(): Promise<boolean> {\n  try {\n    const roles = await getUsersRoles();\n\n    console.log(\"ROLES\", roles);\n    return roles.some((role) => role.name.toLowerCase() === \"admin\"); // or can check for rol_DzoN34zS1PFnEfY4\n  } catch (error) {\n    console.error(\"Error checking admin status:\", error);\n    return false;\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,QAAQ,MAAM,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD;QAEhC,QAAQ,GAAG,CAAC,SAAS;QACrB,OAAO,MAAM,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI,CAAC,WAAW,OAAO,UAAU,wCAAwC;IAC5G,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;;;IAVsB;;AAAA,+OAAA"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/app/admin/page.tsx"],"sourcesContent":["import { isUserAdmin } from \"@/actions/isUserAdmin\";\nimport { redirect } from \"next/navigation\";\nimport { createClient } from \"@/utils/supabase/server\";\n\nasync function AdminPage() {\n  const isAdmin = await isUserAdmin();\n\n  if (!isAdmin) {\n    return redirect(\"/unauthorized\");\n  }\n\n  // create supabase clientand query events\n  const supabase = await createClient();\n  const { data: events, error } = await supabase.from(\"events\").select();\n  console.log(\"Events:\", events, \"Error:\", error);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n            Admin Dashboard\n          </h1>\n          <p className=\"text-gray-600 mb-4\">\n            Welcome to the admin area. This page is only accessible to\n            administrators.\n          </p>\n          <div className=\"border-t border-gray-200 pt-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-3\">\n              Upcoming Events\n            </h2>\n            <p className=\"text-gray-600\">\n              All events in non-complete status\n            </p>\n          </div>\n          <div className=\"border-t border-gray-200 pt-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-3\">\n              Past Events\n            </h2>\n            <p className=\"text-gray-600\">\n              All events in complete status\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AADA;;;;;AAGA,eAAe;IACb,MAAM,UAAU,MAAM,CAAA,GAAA,uHAAA,CAAA,cAAW,AAAD;IAEhC,IAAI,CAAC,SAAS;QACZ,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAClB;IAEA,yCAAyC;IACzC,MAAM,WAAW,MAAM,CAAA,GAAA,2HAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,MAAM,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,MAAM;IACpE,QAAQ,GAAG,CAAC,WAAW,QAAQ,UAAU;IAEzC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;kCAGtD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAIlC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA2C;;;;;;0CAGzD,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAI/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA2C;;;;;;0CAGzD,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzC;uCAEe"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}