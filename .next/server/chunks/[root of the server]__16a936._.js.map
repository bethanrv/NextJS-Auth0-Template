{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport const createClient = async () => {\n  const cookieStore = await cookies() // Add await here\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          cookieStore.set({ name, value, ...options })\n        },\n        remove(name: string, options: CookieOptions) {\n          cookieStore.set({ name, value: '', ...options })\n        }\n      }\n    }\n  )\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,MAAM,eAAe;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,IAAI,iBAAiB;;IAErD,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/brv/Documents/NextJS-Auth0-Template/app/api/cron-write/route.ts"],"sourcesContent":["// app/api/cron-write/route.ts\nimport { createClient } from '@/utils/supabase/server';\nimport { NextResponse } from 'next/server';\n\nexport async function GET(request: Request) {\n  // Authorization check first\n  const authHeader = request.headers.get('Authorization');\n  console.log('authHeader')\n  console.log(authHeader)\n  console.log('process.env.CRON_SECRET')\n  console.log(process.env.CRON_SECRET)\n  if (!authHeader || authHeader !== `Bearer ${process.env.CRON_SECRET}`) {\n    return new NextResponse('Unauthorized', {\n      status: 401,\n      headers: { 'WWW-Authenticate': 'Bearer' }\n    });\n  }\n\n  // Proceed with database operations after successful auth\n  const supabase = await createClient();\n  \n  try {\n    const { data, error } = await supabase.from('testTbl').select('*');\n\n    if (error) throw error;\n    \n    console.log('Cron job results:', data);\n    \n    return NextResponse.json({\n      success: true,\n      count: data.length,\n      results: data\n    });\n\n  } catch (err: any) {\n    console.error('Cron job failed:', err.message);\n    return NextResponse.json(\n      { success: false, error: err.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport const dynamic = 'force-dynamic';\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;;AAC9B;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,4BAA4B;IAC5B,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IACvC,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,QAAQ,GAAG,CAAC,WAAW;IACnC,IAAI,CAAC,cAAc,eAAe,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,WAAW,EAAE,EAAE;QACrE,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,gBAAgB;YACtC,QAAQ;YACR,SAAS;gBAAE,oBAAoB;YAAS;QAC1C;IACF;IAEA,yDAAyD;IACzD,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;IAElC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,WAAW,MAAM,CAAC;QAE9D,IAAI,OAAO,MAAM;QAEjB,QAAQ,GAAG,CAAC,qBAAqB;QAEjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,KAAK,MAAM;YAClB,SAAS;QACX;IAEF,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,oBAAoB,IAAI,OAAO;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO,IAAI,OAAO;QAAC,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,MAAM,UAAU"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}